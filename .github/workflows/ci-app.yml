name: CI / App

on:
  pull_request:
    branches: [dev, stg, prd]
    types: [opened, reopened, synchronize, edited]
    paths:
      - 'src/**'
      - 'docker-compose.yml'
      - '.github/workflows/ci-app.yml'

env:
  node_version: "18.x"
  FORCE_COLOR: 3

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node_version }}
          cache: npm
          cache-dependency-path: '**/package-lock.json'

      - name: npm ci
        working-directory: src
        run: npm ci --prefer-offline

      - name: npm test
        working-directory: src
        run: npm test

      - name: Report test coverage to Codecov
        uses: codecov/codecov-action@v3
        if: env.CODECOV_TOKEN
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  audit:
    name: Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node_version }}

      # We don't need to install deps to audit them

      - name: npm audit
        working-directory: src
        run: npm audit --audit-level=critical

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node_version }}
          cache: npm
          cache-dependency-path: '**/package-lock.json'

      - name: npm ci
        working-directory: src
        run: npm ci --prefer-offline

      - name: npm lint
        working-directory: src
        run: npm run lint

  docker:
    name: Docker Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: docker build
        uses: docker/build-push-action@v3
        with:
          context: src
          platforms: linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

  hadolint:
    name: Lint Docker
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Hadolint follows semantic versioning, but doesn't have a @v2 release
      - name: Lint Dockerfile
        uses: hadolint/hadolint-action@v3.0.0
        with:
          dockerfile: src/Dockerfile

  automerge:
    if: github.base_ref == 'dev' # Only automerge into dev branch
    name: Automerge
    runs-on: ubuntu-latest
    needs: [test, audit, lint, docker, hadolint]
    permissions:
      pull-requests: write
      contents: write
    steps:
      - uses: actions/checkout@v3

      - name: Auto-merge Dependabot Pull Request
        uses: fastify/github-action-merge-dependabot@v3
        continue-on-error: true
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          target: minor
